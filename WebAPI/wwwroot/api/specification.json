{
  "x-generator": "NSwag v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Net Core Web API",
    "version": "1.0"
  },
  "paths": {
    "/api/Account/SignUp": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_SignUp",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/SignIn": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_SignIn",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfSignInResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/SignInWithTFA": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_SignInWithTFA",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInWithTFACommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfSignInResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/tfa-setup": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_GetTFASetup",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfTFASetupDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_PostTFASetup",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TFAEnableCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfUnit"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_DeleteTFASetup",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TFADisableCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfUnit"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Account/ChangePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ChangePassword",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfChangePasswordResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Account/ChangePasswordWithTFA": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ChangePasswordWithTFA",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordWithTFACommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfChangePasswordResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Account/SendTokenToResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_SendTokenToResetPassword",
        "requestBody": {
          "x-name": "query",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordQuery"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ResetPassword",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/RefreshToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_RefreshToken",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfAuthTokenDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cache/ClearAll": {
      "delete": {
        "tags": [
          "Cache"
        ],
        "operationId": "Cache_ClearAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "Administrator"
            ]
          }
        ]
      }
    },
    "/api/Cache/ClearByKey": {
      "delete": {
        "tags": [
          "Cache"
        ],
        "operationId": "Cache_ClearByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "Administrator"
            ]
          }
        ]
      }
    },
    "/api/FormData/GetFormList": {
      "get": {
        "tags": [
          "FormData"
        ],
        "operationId": "FormData_GetFormList",
        "parameters": [
          {
            "name": "Keyword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "requestId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfPaginatedListOfFormDBTableDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "Administrator"
            ]
          }
        ]
      }
    },
    "/api/FormData/GetFormFieldList": {
      "get": {
        "tags": [
          "FormData"
        ],
        "operationId": "FormData_GetFormFieldList",
        "parameters": [
          {
            "name": "DBTable",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "requestId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfPaginatedListOfFormFieldDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "Administrator"
            ]
          }
        ]
      }
    },
    "/api/FormData/GetFormFieldIncludeValueList": {
      "get": {
        "tags": [
          "FormData"
        ],
        "operationId": "FormData_GetFormFieldIncludeValueList",
        "parameters": [
          {
            "name": "ParentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "DBTable",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "requestId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOfListOfFormFieldDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/System/RSAEncryptData": {
      "post": {
        "tags": [
          "System"
        ],
        "operationId": "System_RSAEncryptData",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptedDataRequestModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ResponseOfUnit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Response"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Unit"
              }
            }
          }
        ]
      },
      "Unit": {
        "type": "object",
        "description": "Represents a void type, since Void is not a valid return type in C#.",
        "additionalProperties": false
      },
      "Response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "succeeded": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "systemError": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "requestTime": {
            "type": "string",
            "nullable": true
          },
          "responseTime": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SignUpCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserForRegistrationDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "requestId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "UserForRegistrationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResponseOfSignInResultDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Response"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SignInResultDto"
                  }
                ]
              }
            }
          }
        ]
      },
      "SignInResultDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuthTokenDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "userInfo": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserInfoDto"
                  }
                ]
              },
              "isTFAEnabled": {
                "type": "boolean"
              },
              "isAuthSuccessful": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "UserInfoDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "isFirstLogin": {
            "type": "boolean"
          }
        }
      },
      "AuthTokenDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SignInCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserForAuthenticationDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "recaptchaToken": {
                "type": "string",
                "nullable": true
              },
              "requestId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "UserForAuthenticationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "keepLogin": {
            "type": "boolean"
          }
        }
      },
      "SignInWithTFACommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserForTFAAuthDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "requestId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "UserForTFAAuthDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "keepLogin": {
            "type": "boolean"
          }
        }
      },
      "ResponseOfTFASetupDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Response"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TFASetupDto"
                  }
                ]
              }
            }
          }
        ]
      },
      "TFASetupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isTfaEnabled": {
            "type": "boolean"
          },
          "authenticatorKey": {
            "type": "string",
            "nullable": true
          },
          "formattedKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TFAEnableCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        }
      },
      "TFADisableCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        }
      },
      "ResponseOfChangePasswordResponseDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Response"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ChangePasswordResponseDto"
                  }
                ]
              }
            }
          }
        ]
      },
      "ChangePasswordResponseDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isPasswordChanged": {
            "type": "boolean"
          },
          "isTFAEnabled": {
            "type": "boolean"
          }
        }
      },
      "ChangePasswordCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "currentPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string"
          }
        }
      },
      "ChangePasswordWithTFACommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "currentPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string"
          }
        }
      },
      "ResetPasswordQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string"
          }
        }
      },
      "ResetPasswordCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string"
          }
        }
      },
      "ResponseOfAuthTokenDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Response"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AuthTokenDto"
                  }
                ]
              }
            }
          }
        ]
      },
      "RefreshTokenCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string"
          }
        }
      },
      "ResponseOfPaginatedListOfFormDBTableDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Response"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaginatedListOfFormDBTableDto"
                  }
                ]
              }
            }
          }
        ]
      },
      "PaginatedListOfFormDBTableDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormDBTableDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "FormDBTableDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dbTable": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseOfPaginatedListOfFormFieldDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Response"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaginatedListOfFormFieldDto"
                  }
                ]
              }
            }
          }
        ]
      },
      "PaginatedListOfFormFieldDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormFieldDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "FormFieldDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "dbTable": {
            "type": "string",
            "nullable": true
          },
          "dbColumn": {
            "type": "string",
            "nullable": true
          },
          "editorType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "tooltip": {
            "type": "string",
            "nullable": true
          },
          "javascript": {
            "type": "string",
            "nullable": true
          },
          "sourceEndpoint": {
            "type": "string",
            "nullable": true
          },
          "httpMethod": {
            "type": "string",
            "nullable": true
          },
          "dataText": {
            "type": "string",
            "nullable": true
          },
          "dataValue": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "string",
            "nullable": true
          },
          "classCSS": {
            "type": "string",
            "nullable": true
          },
          "permissionRoles": {
            "type": "string",
            "nullable": true
          },
          "dbValue": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResponseOfListOfFormFieldDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Response"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/FormFieldDto"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "EncryptedDataRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "plainText1": {
            "type": "string",
            "nullable": true
          },
          "plainText2": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}